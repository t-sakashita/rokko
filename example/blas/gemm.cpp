/*****************************************************************************
*
* Rokko: Integrated Interface for libraries of eigenvalue decomposition
*
* Copyright (C) 2012-2019 by Synge Todo <wistaria@phys.s.u-tokyo.ac.jp>
*
* Distributed under the Boost Software License, Version 1.0. (See accompanying
* file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
*
*****************************************************************************/

#include <iostream>
#include <rokko/eigen3.hpp>
#include <rokko/blas.hpp>

int main() {
  std::size_t n = 4;
  Eigen::MatrixXd a(n, n);
  a << 0.959291425205444, 0.257508254123736, 0.243524968724989, 0.251083857976031,
    0.547215529963803, 0.840717255983663, 0.929263623187228, 0.616044676146639,
    0.138624442828679, 0.254282178971531, 0.349983765984809, 0.473288848902729,
    0.149294005559057, 0.814284826068816, 0.196595250431208, 0.351659507062997;
  Eigen::MatrixXd b(n, n);
  b << 0.567821640725221, 0.779167230102011, 0.469390641058206, 0.794284540683907,
    0.0758542895630636, 0.934010684229183, 0.0119020695012414, 0.311215042044805,
    0.0539501186666072, 0.129906208473730, 0.337122644398882, 0.528533135506213,
    0.530797553008973, 0.568823660872193, 0.162182308193243, 0.165648729499781;
  Eigen::MatrixXd c(n, n);
  c << 0.601981941401637, 0.748151592823710, 0.913337361501670, 0.996134716626886,
    0.262971284540144, 0.450541598502498, 0.152378018969223, 0.0781755287531837,
    0.654079098476782, 0.0838213779969326, 0.825816977489547, 0.442678269775446,
    0.689214503140008, 0.228976968716819, 0.538342435260057, 0.106652770180584;

  double alpha = 2.1;
  double beta = 0.8;

  std::cout << "a = [\n" << a << "\n]\n";
  std::cout << "b = [\n" << b << "\n]\n";
  std::cout << "c = [\n" << c << "\n]\n";

  rokko::blas::gemm(CblasNoTrans, CblasNoTrans, alpha, a, b, beta, c);

  std::cout << alpha << " * a * b + " << beta << " * c = [\n" << c << "\n]\n";
}

/* gemm.m

A = [0.959291425205444,0.257508254123736,0.243524968724989,0.251083857976031;0.547215529963803,0.840717255983663,0.929263623187228,0.616044676146639;0.138624442828679,0.254282178971531,0.349983765984809,0.473288848902729;0.149294005559057,0.814284826068816,0.196595250431208,0.351659507062997]
B = [0.567821640725221,0.779167230102011,0.469390641058206,0.794284540683907;0.0758542895630636,0.934010684229183,0.0119020695012414,0.311215042044805;0.0539501186666072,0.129906208473730,0.337122644398882,0.528533135506213;0.530797553008973,0.568823660872193,0.162182308193243,0.165648729499781]
C = [0.601981941401637,0.748151592823710,0.913337361501670,0.996134716626886;0.262971284540144,0.450541598502498,0.152378018969223,0.0781755287531837;0.654079098476782,0.0838213779969326,0.825816977489547,0.442678269775446;0.689214503140008,0.228976968716819,0.538342435260057,0.106652770180584]
2.1 * A * B + 0.8 * C

*/
