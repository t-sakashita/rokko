set(PROG psyev psyevd pstedc pstebz_tein psyevd_float psyevd_complex)
if(ROKKO_HAVE_SCALAPACK_PDSYEVR)
  set(PROG ${PROG} psyevr psyevr_float)
endif(ROKKO_HAVE_SCALAPACK_PDSYEVR)
foreach(name ${PROG})
  set(target_name example_scalapack_${name})
  add_executable(${target_name} ${name}.cpp)
  set_target_properties(${target_name} PROPERTIES OUTPUT_NAME ${name})
  target_link_libraries(${target_name} rokko m)
  foreach(np 1 2 4)
    add_test(${target_name}-${np} ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} ${np} ${MPIEXEC_PREFLAGS} ${CMAKE_CURRENT_BINARY_DIR}/${name} ${MPIEXEC_POSTFLAGS})
  endforeach(np)
endforeach(name)
unset(PROG)

set(PROG pdsyev pdsyevd pdsyevx pssyevd pdstebz pdlaprnt)
if(ROKKO_HAVE_SCALAPACK_PDSYEVR)
  set(PROG ${PROG} pdsyevr)
endif(ROKKO_HAVE_SCALAPACK_PDSYEVR)
foreach(name ${PROG})
  set(target_name example_scalapack_${name})
  add_executable(${target_name} ${name}.c)
  set_target_properties(${target_name} PROPERTIES OUTPUT_NAME ${name}_c)
  target_link_libraries(${target_name} rokko m)
  foreach(np 1 2 4)
    add_test(${target_name}-${np} ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} ${np} ${MPIEXEC_PREFLAGS} ${CMAKE_CURRENT_BINARY_DIR}/${name}_c ${MPIEXEC_POSTFLAGS})
  endforeach(np)
endforeach(name)
unset(PROG)

if(BUILD_Fortran_BINDING)
  set(PROG pdsyev_f pdsyevd_f pdsyevx_f pssyevd_f pdstebz_f)
  if(ROKKO_HAVE_SCALAPACK_PDSYEVR)
    set(PROG ${PROG} pdsyevr_f)
  endif(ROKKO_HAVE_SCALAPACK_PDSYEVR)
  foreach(name ${PROG})
    set(target_name example_scalapack_${name})
    add_executable(${target_name} ${name}.f90)
    set_target_properties(${target_name} PROPERTIES OUTPUT_NAME ${name})
    target_link_libraries(${target_name} rokko)
    foreach(np 1 2 4)
      add_test(${target_name}-${np} ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} ${np} ${MPIEXEC_PREFLAGS} ${CMAKE_CURRENT_BINARY_DIR}/${name} ${MPIEXEC_POSTFLAGS})
    endforeach(np)
  endforeach(name)
  unset(PROG)
endif(BUILD_Fortran_BINDING)
